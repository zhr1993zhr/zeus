// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SocketProtocol.proto

package com.taobao.zeus.socket.protocol;

public final class Protocol {
  private Protocol() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum Status
      implements com.google.protobuf.ProtocolMessageEnum {
    OK(0, 0),
    ERROR(1, 1),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static Status valueOf(int value) {
      switch (value) {
        case 0: return OK;
        case 1: return ERROR;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Status>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Status>() {
            public Status findValueByNumber(int number) {
              return Status.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.taobao.zeus.socket.protocol.Protocol.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final Status[] VALUES = {
      OK, ERROR, 
    };
    public static Status valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private Status(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.taobao.zeus.socket.protocol.Protocol.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.taobao.zeus.socket.protocol.Status)
  }
  
  public enum ExecuteKind
      implements com.google.protobuf.ProtocolMessageEnum {
    ScheduleKind(0, 0),
    ManualKind(1, 1),
    DebugKind(2, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static ExecuteKind valueOf(int value) {
      switch (value) {
        case 0: return ScheduleKind;
        case 1: return ManualKind;
        case 2: return DebugKind;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<ExecuteKind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<ExecuteKind>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ExecuteKind>() {
            public ExecuteKind findValueByNumber(int number) {
              return ExecuteKind.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.taobao.zeus.socket.protocol.Protocol.getDescriptor().getEnumTypes().get(1);
    }
    
    private static final ExecuteKind[] VALUES = {
      ScheduleKind, ManualKind, DebugKind, 
    };
    public static ExecuteKind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private ExecuteKind(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.taobao.zeus.socket.protocol.Protocol.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.taobao.zeus.socket.protocol.ExecuteKind)
  }
  
  public enum WebOperate
      implements com.google.protobuf.ProtocolMessageEnum {
    UpdateJob(0, 1),
    ExecuteJob(1, 2),
    CancelJob(2, 3),
    ExecuteDebug(3, 4),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static WebOperate valueOf(int value) {
      switch (value) {
        case 1: return UpdateJob;
        case 2: return ExecuteJob;
        case 3: return CancelJob;
        case 4: return ExecuteDebug;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<WebOperate>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<WebOperate>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<WebOperate>() {
            public WebOperate findValueByNumber(int number) {
              return WebOperate.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.taobao.zeus.socket.protocol.Protocol.getDescriptor().getEnumTypes().get(2);
    }
    
    private static final WebOperate[] VALUES = {
      UpdateJob, ExecuteJob, CancelJob, ExecuteDebug, 
    };
    public static WebOperate valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private WebOperate(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.taobao.zeus.socket.protocol.Protocol.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.taobao.zeus.socket.protocol.WebOperate)
  }
  
  public enum Operate
      implements com.google.protobuf.ProtocolMessageEnum {
    HeartBeat(0, 0),
    Schedule(1, 1),
    Cancel(2, 2),
    Debug(3, 3),
    Manual(4, 4),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static Operate valueOf(int value) {
      switch (value) {
        case 0: return HeartBeat;
        case 1: return Schedule;
        case 2: return Cancel;
        case 3: return Debug;
        case 4: return Manual;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<Operate>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Operate>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Operate>() {
            public Operate findValueByNumber(int number) {
              return Operate.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.taobao.zeus.socket.protocol.Protocol.getDescriptor().getEnumTypes().get(3);
    }
    
    private static final Operate[] VALUES = {
      HeartBeat, Schedule, Cancel, Debug, Manual, 
    };
    public static Operate valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private Operate(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      com.taobao.zeus.socket.protocol.Protocol.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:com.taobao.zeus.socket.protocol.Operate)
  }
  
  public static final class SocketMessage extends
      com.google.protobuf.GeneratedMessage {
    // Use SocketMessage.newBuilder() to construct.
    private SocketMessage() {
      initFields();
    }
    private SocketMessage(boolean noInit) {}
    
    private static final SocketMessage defaultInstance;
    public static SocketMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public SocketMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_SocketMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_SocketMessage_fieldAccessorTable;
    }
    
    public enum Kind
        implements com.google.protobuf.ProtocolMessageEnum {
      REQUEST(0, 0),
      RESPONSE(1, 1),
      WEB_REUQEST(2, 2),
      WEB_RESPONSE(3, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Kind valueOf(int value) {
        switch (value) {
          case 0: return REQUEST;
          case 1: return RESPONSE;
          case 2: return WEB_REUQEST;
          case 3: return WEB_RESPONSE;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Kind>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Kind>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Kind>() {
              public Kind findValueByNumber(int number) {
                return Kind.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.taobao.zeus.socket.protocol.Protocol.SocketMessage.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Kind[] VALUES = {
        REQUEST, RESPONSE, WEB_REUQEST, WEB_RESPONSE, 
      };
      public static Kind valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Kind(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.taobao.zeus.socket.protocol.Protocol.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:com.taobao.zeus.socket.protocol.SocketMessage.Kind)
    }
    
    // required .com.taobao.zeus.socket.protocol.SocketMessage.Kind kind = 1;
    public static final int KIND_FIELD_NUMBER = 1;
    private boolean hasKind;
    private com.taobao.zeus.socket.protocol.Protocol.SocketMessage.Kind kind_;
    public boolean hasKind() { return hasKind; }
    public com.taobao.zeus.socket.protocol.Protocol.SocketMessage.Kind getKind() { return kind_; }
    
    // optional bytes body = 2;
    public static final int BODY_FIELD_NUMBER = 2;
    private boolean hasBody;
    private com.google.protobuf.ByteString body_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBody() { return hasBody; }
    public com.google.protobuf.ByteString getBody() { return body_; }
    
    private void initFields() {
      kind_ = com.taobao.zeus.socket.protocol.Protocol.SocketMessage.Kind.REQUEST;
    }
    public final boolean isInitialized() {
      if (!hasKind) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasKind()) {
        output.writeEnum(1, getKind().getNumber());
      }
      if (hasBody()) {
        output.writeBytes(2, getBody());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasKind()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getKind().getNumber());
      }
      if (hasBody()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getBody());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.taobao.zeus.socket.protocol.Protocol.SocketMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.SocketMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.SocketMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.SocketMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.SocketMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.SocketMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.SocketMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.SocketMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.SocketMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.SocketMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.taobao.zeus.socket.protocol.Protocol.SocketMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.taobao.zeus.socket.protocol.Protocol.SocketMessage result;
      
      // Construct using com.taobao.zeus.socket.protocol.Protocol.SocketMessage.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.taobao.zeus.socket.protocol.Protocol.SocketMessage();
        return builder;
      }
      
      protected com.taobao.zeus.socket.protocol.Protocol.SocketMessage internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.taobao.zeus.socket.protocol.Protocol.SocketMessage();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.taobao.zeus.socket.protocol.Protocol.SocketMessage.getDescriptor();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.SocketMessage getDefaultInstanceForType() {
        return com.taobao.zeus.socket.protocol.Protocol.SocketMessage.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.taobao.zeus.socket.protocol.Protocol.SocketMessage build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.taobao.zeus.socket.protocol.Protocol.SocketMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.SocketMessage buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.taobao.zeus.socket.protocol.Protocol.SocketMessage returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.taobao.zeus.socket.protocol.Protocol.SocketMessage) {
          return mergeFrom((com.taobao.zeus.socket.protocol.Protocol.SocketMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.taobao.zeus.socket.protocol.Protocol.SocketMessage other) {
        if (other == com.taobao.zeus.socket.protocol.Protocol.SocketMessage.getDefaultInstance()) return this;
        if (other.hasKind()) {
          setKind(other.getKind());
        }
        if (other.hasBody()) {
          setBody(other.getBody());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.taobao.zeus.socket.protocol.Protocol.SocketMessage.Kind value = com.taobao.zeus.socket.protocol.Protocol.SocketMessage.Kind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setKind(value);
              }
              break;
            }
            case 18: {
              setBody(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required .com.taobao.zeus.socket.protocol.SocketMessage.Kind kind = 1;
      public boolean hasKind() {
        return result.hasKind();
      }
      public com.taobao.zeus.socket.protocol.Protocol.SocketMessage.Kind getKind() {
        return result.getKind();
      }
      public Builder setKind(com.taobao.zeus.socket.protocol.Protocol.SocketMessage.Kind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasKind = true;
        result.kind_ = value;
        return this;
      }
      public Builder clearKind() {
        result.hasKind = false;
        result.kind_ = com.taobao.zeus.socket.protocol.Protocol.SocketMessage.Kind.REQUEST;
        return this;
      }
      
      // optional bytes body = 2;
      public boolean hasBody() {
        return result.hasBody();
      }
      public com.google.protobuf.ByteString getBody() {
        return result.getBody();
      }
      public Builder setBody(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder clearBody() {
        result.hasBody = false;
        result.body_ = getDefaultInstance().getBody();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.taobao.zeus.socket.protocol.SocketMessage)
    }
    
    static {
      defaultInstance = new SocketMessage(true);
      com.taobao.zeus.socket.protocol.Protocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.taobao.zeus.socket.protocol.SocketMessage)
  }
  
  public static final class WebRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use WebRequest.newBuilder() to construct.
    private WebRequest() {
      initFields();
    }
    private WebRequest(boolean noInit) {}
    
    private static final WebRequest defaultInstance;
    public static WebRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public WebRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_WebRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_WebRequest_fieldAccessorTable;
    }
    
    public enum Trigger
        implements com.google.protobuf.ProtocolMessageEnum {
      MANUAL(0, 0),
      MANUAL_RECOVER(1, 1),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Trigger valueOf(int value) {
        switch (value) {
          case 0: return MANUAL;
          case 1: return MANUAL_RECOVER;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Trigger>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Trigger>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Trigger>() {
              public Trigger findValueByNumber(int number) {
                return Trigger.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.taobao.zeus.socket.protocol.Protocol.WebRequest.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Trigger[] VALUES = {
        MANUAL, MANUAL_RECOVER, 
      };
      public static Trigger valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Trigger(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.taobao.zeus.socket.protocol.Protocol.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:com.taobao.zeus.socket.protocol.WebRequest.Trigger)
    }
    
    // required sint32 rid = 1;
    public static final int RID_FIELD_NUMBER = 1;
    private boolean hasRid;
    private int rid_ = 0;
    public boolean hasRid() { return hasRid; }
    public int getRid() { return rid_; }
    
    // required .com.taobao.zeus.socket.protocol.WebOperate operate = 2;
    public static final int OPERATE_FIELD_NUMBER = 2;
    private boolean hasOperate;
    private com.taobao.zeus.socket.protocol.Protocol.WebOperate operate_;
    public boolean hasOperate() { return hasOperate; }
    public com.taobao.zeus.socket.protocol.Protocol.WebOperate getOperate() { return operate_; }
    
    // required .com.taobao.zeus.socket.protocol.ExecuteKind ek = 3;
    public static final int EK_FIELD_NUMBER = 3;
    private boolean hasEk;
    private com.taobao.zeus.socket.protocol.Protocol.ExecuteKind ek_;
    public boolean hasEk() { return hasEk; }
    public com.taobao.zeus.socket.protocol.Protocol.ExecuteKind getEk() { return ek_; }
    
    // required string id = 4;
    public static final int ID_FIELD_NUMBER = 4;
    private boolean hasId;
    private java.lang.String id_ = "";
    public boolean hasId() { return hasId; }
    public java.lang.String getId() { return id_; }
    
    // optional string executor = 5;
    public static final int EXECUTOR_FIELD_NUMBER = 5;
    private boolean hasExecutor;
    private java.lang.String executor_ = "";
    public boolean hasExecutor() { return hasExecutor; }
    public java.lang.String getExecutor() { return executor_; }
    
    // optional bytes body = 6;
    public static final int BODY_FIELD_NUMBER = 6;
    private boolean hasBody;
    private com.google.protobuf.ByteString body_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBody() { return hasBody; }
    public com.google.protobuf.ByteString getBody() { return body_; }
    
    private void initFields() {
      operate_ = com.taobao.zeus.socket.protocol.Protocol.WebOperate.UpdateJob;
      ek_ = com.taobao.zeus.socket.protocol.Protocol.ExecuteKind.ScheduleKind;
    }
    public final boolean isInitialized() {
      if (!hasRid) return false;
      if (!hasOperate) return false;
      if (!hasEk) return false;
      if (!hasId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRid()) {
        output.writeSInt32(1, getRid());
      }
      if (hasOperate()) {
        output.writeEnum(2, getOperate().getNumber());
      }
      if (hasEk()) {
        output.writeEnum(3, getEk().getNumber());
      }
      if (hasId()) {
        output.writeString(4, getId());
      }
      if (hasExecutor()) {
        output.writeString(5, getExecutor());
      }
      if (hasBody()) {
        output.writeBytes(6, getBody());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, getRid());
      }
      if (hasOperate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getOperate().getNumber());
      }
      if (hasEk()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, getEk().getNumber());
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getId());
      }
      if (hasExecutor()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getExecutor());
      }
      if (hasBody()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getBody());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.taobao.zeus.socket.protocol.Protocol.WebRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.taobao.zeus.socket.protocol.Protocol.WebRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.taobao.zeus.socket.protocol.Protocol.WebRequest result;
      
      // Construct using com.taobao.zeus.socket.protocol.Protocol.WebRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.taobao.zeus.socket.protocol.Protocol.WebRequest();
        return builder;
      }
      
      protected com.taobao.zeus.socket.protocol.Protocol.WebRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.taobao.zeus.socket.protocol.Protocol.WebRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.taobao.zeus.socket.protocol.Protocol.WebRequest.getDescriptor();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.WebRequest getDefaultInstanceForType() {
        return com.taobao.zeus.socket.protocol.Protocol.WebRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.taobao.zeus.socket.protocol.Protocol.WebRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.taobao.zeus.socket.protocol.Protocol.WebRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.WebRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.taobao.zeus.socket.protocol.Protocol.WebRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.taobao.zeus.socket.protocol.Protocol.WebRequest) {
          return mergeFrom((com.taobao.zeus.socket.protocol.Protocol.WebRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.taobao.zeus.socket.protocol.Protocol.WebRequest other) {
        if (other == com.taobao.zeus.socket.protocol.Protocol.WebRequest.getDefaultInstance()) return this;
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOperate()) {
          setOperate(other.getOperate());
        }
        if (other.hasEk()) {
          setEk(other.getEk());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasExecutor()) {
          setExecutor(other.getExecutor());
        }
        if (other.hasBody()) {
          setBody(other.getBody());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setRid(input.readSInt32());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.taobao.zeus.socket.protocol.Protocol.WebOperate value = com.taobao.zeus.socket.protocol.Protocol.WebOperate.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                setOperate(value);
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.taobao.zeus.socket.protocol.Protocol.ExecuteKind value = com.taobao.zeus.socket.protocol.Protocol.ExecuteKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                setEk(value);
              }
              break;
            }
            case 34: {
              setId(input.readString());
              break;
            }
            case 42: {
              setExecutor(input.readString());
              break;
            }
            case 50: {
              setBody(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required sint32 rid = 1;
      public boolean hasRid() {
        return result.hasRid();
      }
      public int getRid() {
        return result.getRid();
      }
      public Builder setRid(int value) {
        result.hasRid = true;
        result.rid_ = value;
        return this;
      }
      public Builder clearRid() {
        result.hasRid = false;
        result.rid_ = 0;
        return this;
      }
      
      // required .com.taobao.zeus.socket.protocol.WebOperate operate = 2;
      public boolean hasOperate() {
        return result.hasOperate();
      }
      public com.taobao.zeus.socket.protocol.Protocol.WebOperate getOperate() {
        return result.getOperate();
      }
      public Builder setOperate(com.taobao.zeus.socket.protocol.Protocol.WebOperate value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasOperate = true;
        result.operate_ = value;
        return this;
      }
      public Builder clearOperate() {
        result.hasOperate = false;
        result.operate_ = com.taobao.zeus.socket.protocol.Protocol.WebOperate.UpdateJob;
        return this;
      }
      
      // required .com.taobao.zeus.socket.protocol.ExecuteKind ek = 3;
      public boolean hasEk() {
        return result.hasEk();
      }
      public com.taobao.zeus.socket.protocol.Protocol.ExecuteKind getEk() {
        return result.getEk();
      }
      public Builder setEk(com.taobao.zeus.socket.protocol.Protocol.ExecuteKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasEk = true;
        result.ek_ = value;
        return this;
      }
      public Builder clearEk() {
        result.hasEk = false;
        result.ek_ = com.taobao.zeus.socket.protocol.Protocol.ExecuteKind.ScheduleKind;
        return this;
      }
      
      // required string id = 4;
      public boolean hasId() {
        return result.hasId();
      }
      public java.lang.String getId() {
        return result.getId();
      }
      public Builder setId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = getDefaultInstance().getId();
        return this;
      }
      
      // optional string executor = 5;
      public boolean hasExecutor() {
        return result.hasExecutor();
      }
      public java.lang.String getExecutor() {
        return result.getExecutor();
      }
      public Builder setExecutor(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasExecutor = true;
        result.executor_ = value;
        return this;
      }
      public Builder clearExecutor() {
        result.hasExecutor = false;
        result.executor_ = getDefaultInstance().getExecutor();
        return this;
      }
      
      // optional bytes body = 6;
      public boolean hasBody() {
        return result.hasBody();
      }
      public com.google.protobuf.ByteString getBody() {
        return result.getBody();
      }
      public Builder setBody(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder clearBody() {
        result.hasBody = false;
        result.body_ = getDefaultInstance().getBody();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.taobao.zeus.socket.protocol.WebRequest)
    }
    
    static {
      defaultInstance = new WebRequest(true);
      com.taobao.zeus.socket.protocol.Protocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.taobao.zeus.socket.protocol.WebRequest)
  }
  
  public static final class WebResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use WebResponse.newBuilder() to construct.
    private WebResponse() {
      initFields();
    }
    private WebResponse(boolean noInit) {}
    
    private static final WebResponse defaultInstance;
    public static WebResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public WebResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_WebResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_WebResponse_fieldAccessorTable;
    }
    
    // required .com.taobao.zeus.socket.protocol.Status status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private boolean hasStatus;
    private com.taobao.zeus.socket.protocol.Protocol.Status status_;
    public boolean hasStatus() { return hasStatus; }
    public com.taobao.zeus.socket.protocol.Protocol.Status getStatus() { return status_; }
    
    // required sint32 rid = 2;
    public static final int RID_FIELD_NUMBER = 2;
    private boolean hasRid;
    private int rid_ = 0;
    public boolean hasRid() { return hasRid; }
    public int getRid() { return rid_; }
    
    // required .com.taobao.zeus.socket.protocol.WebOperate operate = 3;
    public static final int OPERATE_FIELD_NUMBER = 3;
    private boolean hasOperate;
    private com.taobao.zeus.socket.protocol.Protocol.WebOperate operate_;
    public boolean hasOperate() { return hasOperate; }
    public com.taobao.zeus.socket.protocol.Protocol.WebOperate getOperate() { return operate_; }
    
    // optional string errorText = 4;
    public static final int ERRORTEXT_FIELD_NUMBER = 4;
    private boolean hasErrorText;
    private java.lang.String errorText_ = "";
    public boolean hasErrorText() { return hasErrorText; }
    public java.lang.String getErrorText() { return errorText_; }
    
    // optional bytes body = 5;
    public static final int BODY_FIELD_NUMBER = 5;
    private boolean hasBody;
    private com.google.protobuf.ByteString body_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBody() { return hasBody; }
    public com.google.protobuf.ByteString getBody() { return body_; }
    
    private void initFields() {
      status_ = com.taobao.zeus.socket.protocol.Protocol.Status.OK;
      operate_ = com.taobao.zeus.socket.protocol.Protocol.WebOperate.UpdateJob;
    }
    public final boolean isInitialized() {
      if (!hasStatus) return false;
      if (!hasRid) return false;
      if (!hasOperate) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStatus()) {
        output.writeEnum(1, getStatus().getNumber());
      }
      if (hasRid()) {
        output.writeSInt32(2, getRid());
      }
      if (hasOperate()) {
        output.writeEnum(3, getOperate().getNumber());
      }
      if (hasErrorText()) {
        output.writeString(4, getErrorText());
      }
      if (hasBody()) {
        output.writeBytes(5, getBody());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getStatus().getNumber());
      }
      if (hasRid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, getRid());
      }
      if (hasOperate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, getOperate().getNumber());
      }
      if (hasErrorText()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getErrorText());
      }
      if (hasBody()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getBody());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.taobao.zeus.socket.protocol.Protocol.WebResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.WebResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.taobao.zeus.socket.protocol.Protocol.WebResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.taobao.zeus.socket.protocol.Protocol.WebResponse result;
      
      // Construct using com.taobao.zeus.socket.protocol.Protocol.WebResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.taobao.zeus.socket.protocol.Protocol.WebResponse();
        return builder;
      }
      
      protected com.taobao.zeus.socket.protocol.Protocol.WebResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.taobao.zeus.socket.protocol.Protocol.WebResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.taobao.zeus.socket.protocol.Protocol.WebResponse.getDescriptor();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.WebResponse getDefaultInstanceForType() {
        return com.taobao.zeus.socket.protocol.Protocol.WebResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.taobao.zeus.socket.protocol.Protocol.WebResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.taobao.zeus.socket.protocol.Protocol.WebResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.WebResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.taobao.zeus.socket.protocol.Protocol.WebResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.taobao.zeus.socket.protocol.Protocol.WebResponse) {
          return mergeFrom((com.taobao.zeus.socket.protocol.Protocol.WebResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.taobao.zeus.socket.protocol.Protocol.WebResponse other) {
        if (other == com.taobao.zeus.socket.protocol.Protocol.WebResponse.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOperate()) {
          setOperate(other.getOperate());
        }
        if (other.hasErrorText()) {
          setErrorText(other.getErrorText());
        }
        if (other.hasBody()) {
          setBody(other.getBody());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.taobao.zeus.socket.protocol.Protocol.Status value = com.taobao.zeus.socket.protocol.Protocol.Status.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setStatus(value);
              }
              break;
            }
            case 16: {
              setRid(input.readSInt32());
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.taobao.zeus.socket.protocol.Protocol.WebOperate value = com.taobao.zeus.socket.protocol.Protocol.WebOperate.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                setOperate(value);
              }
              break;
            }
            case 34: {
              setErrorText(input.readString());
              break;
            }
            case 42: {
              setBody(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required .com.taobao.zeus.socket.protocol.Status status = 1;
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public com.taobao.zeus.socket.protocol.Protocol.Status getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(com.taobao.zeus.socket.protocol.Protocol.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = com.taobao.zeus.socket.protocol.Protocol.Status.OK;
        return this;
      }
      
      // required sint32 rid = 2;
      public boolean hasRid() {
        return result.hasRid();
      }
      public int getRid() {
        return result.getRid();
      }
      public Builder setRid(int value) {
        result.hasRid = true;
        result.rid_ = value;
        return this;
      }
      public Builder clearRid() {
        result.hasRid = false;
        result.rid_ = 0;
        return this;
      }
      
      // required .com.taobao.zeus.socket.protocol.WebOperate operate = 3;
      public boolean hasOperate() {
        return result.hasOperate();
      }
      public com.taobao.zeus.socket.protocol.Protocol.WebOperate getOperate() {
        return result.getOperate();
      }
      public Builder setOperate(com.taobao.zeus.socket.protocol.Protocol.WebOperate value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasOperate = true;
        result.operate_ = value;
        return this;
      }
      public Builder clearOperate() {
        result.hasOperate = false;
        result.operate_ = com.taobao.zeus.socket.protocol.Protocol.WebOperate.UpdateJob;
        return this;
      }
      
      // optional string errorText = 4;
      public boolean hasErrorText() {
        return result.hasErrorText();
      }
      public java.lang.String getErrorText() {
        return result.getErrorText();
      }
      public Builder setErrorText(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasErrorText = true;
        result.errorText_ = value;
        return this;
      }
      public Builder clearErrorText() {
        result.hasErrorText = false;
        result.errorText_ = getDefaultInstance().getErrorText();
        return this;
      }
      
      // optional bytes body = 5;
      public boolean hasBody() {
        return result.hasBody();
      }
      public com.google.protobuf.ByteString getBody() {
        return result.getBody();
      }
      public Builder setBody(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder clearBody() {
        result.hasBody = false;
        result.body_ = getDefaultInstance().getBody();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.taobao.zeus.socket.protocol.WebResponse)
    }
    
    static {
      defaultInstance = new WebResponse(true);
      com.taobao.zeus.socket.protocol.Protocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.taobao.zeus.socket.protocol.WebResponse)
  }
  
  public static final class Request extends
      com.google.protobuf.GeneratedMessage {
    // Use Request.newBuilder() to construct.
    private Request() {
      initFields();
    }
    private Request(boolean noInit) {}
    
    private static final Request defaultInstance;
    public static Request getDefaultInstance() {
      return defaultInstance;
    }
    
    public Request getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_Request_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_Request_fieldAccessorTable;
    }
    
    // required sint32 rid = 1;
    public static final int RID_FIELD_NUMBER = 1;
    private boolean hasRid;
    private int rid_ = 0;
    public boolean hasRid() { return hasRid; }
    public int getRid() { return rid_; }
    
    // required .com.taobao.zeus.socket.protocol.Operate operate = 2;
    public static final int OPERATE_FIELD_NUMBER = 2;
    private boolean hasOperate;
    private com.taobao.zeus.socket.protocol.Protocol.Operate operate_;
    public boolean hasOperate() { return hasOperate; }
    public com.taobao.zeus.socket.protocol.Protocol.Operate getOperate() { return operate_; }
    
    // optional bytes body = 3;
    public static final int BODY_FIELD_NUMBER = 3;
    private boolean hasBody;
    private com.google.protobuf.ByteString body_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBody() { return hasBody; }
    public com.google.protobuf.ByteString getBody() { return body_; }
    
    private void initFields() {
      operate_ = com.taobao.zeus.socket.protocol.Protocol.Operate.HeartBeat;
    }
    public final boolean isInitialized() {
      if (!hasRid) return false;
      if (!hasOperate) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRid()) {
        output.writeSInt32(1, getRid());
      }
      if (hasOperate()) {
        output.writeEnum(2, getOperate().getNumber());
      }
      if (hasBody()) {
        output.writeBytes(3, getBody());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(1, getRid());
      }
      if (hasOperate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getOperate().getNumber());
      }
      if (hasBody()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getBody());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.taobao.zeus.socket.protocol.Protocol.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.taobao.zeus.socket.protocol.Protocol.Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.taobao.zeus.socket.protocol.Protocol.Request result;
      
      // Construct using com.taobao.zeus.socket.protocol.Protocol.Request.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.taobao.zeus.socket.protocol.Protocol.Request();
        return builder;
      }
      
      protected com.taobao.zeus.socket.protocol.Protocol.Request internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.taobao.zeus.socket.protocol.Protocol.Request();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.taobao.zeus.socket.protocol.Protocol.Request.getDescriptor();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.Request getDefaultInstanceForType() {
        return com.taobao.zeus.socket.protocol.Protocol.Request.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.taobao.zeus.socket.protocol.Protocol.Request build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.taobao.zeus.socket.protocol.Protocol.Request buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.Request buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.taobao.zeus.socket.protocol.Protocol.Request returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.taobao.zeus.socket.protocol.Protocol.Request) {
          return mergeFrom((com.taobao.zeus.socket.protocol.Protocol.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.taobao.zeus.socket.protocol.Protocol.Request other) {
        if (other == com.taobao.zeus.socket.protocol.Protocol.Request.getDefaultInstance()) return this;
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOperate()) {
          setOperate(other.getOperate());
        }
        if (other.hasBody()) {
          setBody(other.getBody());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setRid(input.readSInt32());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.taobao.zeus.socket.protocol.Protocol.Operate value = com.taobao.zeus.socket.protocol.Protocol.Operate.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                setOperate(value);
              }
              break;
            }
            case 26: {
              setBody(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required sint32 rid = 1;
      public boolean hasRid() {
        return result.hasRid();
      }
      public int getRid() {
        return result.getRid();
      }
      public Builder setRid(int value) {
        result.hasRid = true;
        result.rid_ = value;
        return this;
      }
      public Builder clearRid() {
        result.hasRid = false;
        result.rid_ = 0;
        return this;
      }
      
      // required .com.taobao.zeus.socket.protocol.Operate operate = 2;
      public boolean hasOperate() {
        return result.hasOperate();
      }
      public com.taobao.zeus.socket.protocol.Protocol.Operate getOperate() {
        return result.getOperate();
      }
      public Builder setOperate(com.taobao.zeus.socket.protocol.Protocol.Operate value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasOperate = true;
        result.operate_ = value;
        return this;
      }
      public Builder clearOperate() {
        result.hasOperate = false;
        result.operate_ = com.taobao.zeus.socket.protocol.Protocol.Operate.HeartBeat;
        return this;
      }
      
      // optional bytes body = 3;
      public boolean hasBody() {
        return result.hasBody();
      }
      public com.google.protobuf.ByteString getBody() {
        return result.getBody();
      }
      public Builder setBody(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder clearBody() {
        result.hasBody = false;
        result.body_ = getDefaultInstance().getBody();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.taobao.zeus.socket.protocol.Request)
    }
    
    static {
      defaultInstance = new Request(true);
      com.taobao.zeus.socket.protocol.Protocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.taobao.zeus.socket.protocol.Request)
  }
  
  public static final class Response extends
      com.google.protobuf.GeneratedMessage {
    // Use Response.newBuilder() to construct.
    private Response() {
      initFields();
    }
    private Response(boolean noInit) {}
    
    private static final Response defaultInstance;
    public static Response getDefaultInstance() {
      return defaultInstance;
    }
    
    public Response getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_Response_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_Response_fieldAccessorTable;
    }
    
    // required .com.taobao.zeus.socket.protocol.Status status = 1;
    public static final int STATUS_FIELD_NUMBER = 1;
    private boolean hasStatus;
    private com.taobao.zeus.socket.protocol.Protocol.Status status_;
    public boolean hasStatus() { return hasStatus; }
    public com.taobao.zeus.socket.protocol.Protocol.Status getStatus() { return status_; }
    
    // required sint32 rid = 2;
    public static final int RID_FIELD_NUMBER = 2;
    private boolean hasRid;
    private int rid_ = 0;
    public boolean hasRid() { return hasRid; }
    public int getRid() { return rid_; }
    
    // required .com.taobao.zeus.socket.protocol.Operate operate = 3;
    public static final int OPERATE_FIELD_NUMBER = 3;
    private boolean hasOperate;
    private com.taobao.zeus.socket.protocol.Protocol.Operate operate_;
    public boolean hasOperate() { return hasOperate; }
    public com.taobao.zeus.socket.protocol.Protocol.Operate getOperate() { return operate_; }
    
    // optional string errorText = 4;
    public static final int ERRORTEXT_FIELD_NUMBER = 4;
    private boolean hasErrorText;
    private java.lang.String errorText_ = "";
    public boolean hasErrorText() { return hasErrorText; }
    public java.lang.String getErrorText() { return errorText_; }
    
    // optional bytes body = 5;
    public static final int BODY_FIELD_NUMBER = 5;
    private boolean hasBody;
    private com.google.protobuf.ByteString body_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasBody() { return hasBody; }
    public com.google.protobuf.ByteString getBody() { return body_; }
    
    private void initFields() {
      status_ = com.taobao.zeus.socket.protocol.Protocol.Status.OK;
      operate_ = com.taobao.zeus.socket.protocol.Protocol.Operate.HeartBeat;
    }
    public final boolean isInitialized() {
      if (!hasStatus) return false;
      if (!hasRid) return false;
      if (!hasOperate) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStatus()) {
        output.writeEnum(1, getStatus().getNumber());
      }
      if (hasRid()) {
        output.writeSInt32(2, getRid());
      }
      if (hasOperate()) {
        output.writeEnum(3, getOperate().getNumber());
      }
      if (hasErrorText()) {
        output.writeString(4, getErrorText());
      }
      if (hasBody()) {
        output.writeBytes(5, getBody());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getStatus().getNumber());
      }
      if (hasRid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, getRid());
      }
      if (hasOperate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, getOperate().getNumber());
      }
      if (hasErrorText()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getErrorText());
      }
      if (hasBody()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getBody());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.taobao.zeus.socket.protocol.Protocol.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.taobao.zeus.socket.protocol.Protocol.Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.taobao.zeus.socket.protocol.Protocol.Response result;
      
      // Construct using com.taobao.zeus.socket.protocol.Protocol.Response.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.taobao.zeus.socket.protocol.Protocol.Response();
        return builder;
      }
      
      protected com.taobao.zeus.socket.protocol.Protocol.Response internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.taobao.zeus.socket.protocol.Protocol.Response();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.taobao.zeus.socket.protocol.Protocol.Response.getDescriptor();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.Response getDefaultInstanceForType() {
        return com.taobao.zeus.socket.protocol.Protocol.Response.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.taobao.zeus.socket.protocol.Protocol.Response build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.taobao.zeus.socket.protocol.Protocol.Response buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.Response buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.taobao.zeus.socket.protocol.Protocol.Response returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.taobao.zeus.socket.protocol.Protocol.Response) {
          return mergeFrom((com.taobao.zeus.socket.protocol.Protocol.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.taobao.zeus.socket.protocol.Protocol.Response other) {
        if (other == com.taobao.zeus.socket.protocol.Protocol.Response.getDefaultInstance()) return this;
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRid()) {
          setRid(other.getRid());
        }
        if (other.hasOperate()) {
          setOperate(other.getOperate());
        }
        if (other.hasErrorText()) {
          setErrorText(other.getErrorText());
        }
        if (other.hasBody()) {
          setBody(other.getBody());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.taobao.zeus.socket.protocol.Protocol.Status value = com.taobao.zeus.socket.protocol.Protocol.Status.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setStatus(value);
              }
              break;
            }
            case 16: {
              setRid(input.readSInt32());
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.taobao.zeus.socket.protocol.Protocol.Operate value = com.taobao.zeus.socket.protocol.Protocol.Operate.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                setOperate(value);
              }
              break;
            }
            case 34: {
              setErrorText(input.readString());
              break;
            }
            case 42: {
              setBody(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required .com.taobao.zeus.socket.protocol.Status status = 1;
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public com.taobao.zeus.socket.protocol.Protocol.Status getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(com.taobao.zeus.socket.protocol.Protocol.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = com.taobao.zeus.socket.protocol.Protocol.Status.OK;
        return this;
      }
      
      // required sint32 rid = 2;
      public boolean hasRid() {
        return result.hasRid();
      }
      public int getRid() {
        return result.getRid();
      }
      public Builder setRid(int value) {
        result.hasRid = true;
        result.rid_ = value;
        return this;
      }
      public Builder clearRid() {
        result.hasRid = false;
        result.rid_ = 0;
        return this;
      }
      
      // required .com.taobao.zeus.socket.protocol.Operate operate = 3;
      public boolean hasOperate() {
        return result.hasOperate();
      }
      public com.taobao.zeus.socket.protocol.Protocol.Operate getOperate() {
        return result.getOperate();
      }
      public Builder setOperate(com.taobao.zeus.socket.protocol.Protocol.Operate value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasOperate = true;
        result.operate_ = value;
        return this;
      }
      public Builder clearOperate() {
        result.hasOperate = false;
        result.operate_ = com.taobao.zeus.socket.protocol.Protocol.Operate.HeartBeat;
        return this;
      }
      
      // optional string errorText = 4;
      public boolean hasErrorText() {
        return result.hasErrorText();
      }
      public java.lang.String getErrorText() {
        return result.getErrorText();
      }
      public Builder setErrorText(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasErrorText = true;
        result.errorText_ = value;
        return this;
      }
      public Builder clearErrorText() {
        result.hasErrorText = false;
        result.errorText_ = getDefaultInstance().getErrorText();
        return this;
      }
      
      // optional bytes body = 5;
      public boolean hasBody() {
        return result.hasBody();
      }
      public com.google.protobuf.ByteString getBody() {
        return result.getBody();
      }
      public Builder setBody(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasBody = true;
        result.body_ = value;
        return this;
      }
      public Builder clearBody() {
        result.hasBody = false;
        result.body_ = getDefaultInstance().getBody();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.taobao.zeus.socket.protocol.Response)
    }
    
    static {
      defaultInstance = new Response(true);
      com.taobao.zeus.socket.protocol.Protocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.taobao.zeus.socket.protocol.Response)
  }
  
  public static final class HeartBeatMessage extends
      com.google.protobuf.GeneratedMessage {
    // Use HeartBeatMessage.newBuilder() to construct.
    private HeartBeatMessage() {
      initFields();
    }
    private HeartBeatMessage(boolean noInit) {}
    
    private static final HeartBeatMessage defaultInstance;
    public static HeartBeatMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public HeartBeatMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_HeartBeatMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_HeartBeatMessage_fieldAccessorTable;
    }
    
    // repeated string runnings = 1;
    public static final int RUNNINGS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.String> runnings_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getRunningsList() {
      return runnings_;
    }
    public int getRunningsCount() { return runnings_.size(); }
    public java.lang.String getRunnings(int index) {
      return runnings_.get(index);
    }
    
    // repeated string debugRunnings = 2;
    public static final int DEBUGRUNNINGS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.String> debugRunnings_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getDebugRunningsList() {
      return debugRunnings_;
    }
    public int getDebugRunningsCount() { return debugRunnings_.size(); }
    public java.lang.String getDebugRunnings(int index) {
      return debugRunnings_.get(index);
    }
    
    // repeated string manualRunnings = 3;
    public static final int MANUALRUNNINGS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> manualRunnings_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getManualRunningsList() {
      return manualRunnings_;
    }
    public int getManualRunningsCount() { return manualRunnings_.size(); }
    public java.lang.String getManualRunnings(int index) {
      return manualRunnings_.get(index);
    }
    
    // optional int64 timestamp = 4;
    public static final int TIMESTAMP_FIELD_NUMBER = 4;
    private boolean hasTimestamp;
    private long timestamp_ = 0L;
    public boolean hasTimestamp() { return hasTimestamp; }
    public long getTimestamp() { return timestamp_; }
    
    // optional float mem_rate = 5;
    public static final int MEM_RATE_FIELD_NUMBER = 5;
    private boolean hasMemRate;
    private float memRate_ = 0F;
    public boolean hasMemRate() { return hasMemRate; }
    public float getMemRate() { return memRate_; }
    
    // optional string host = 6;
    public static final int HOST_FIELD_NUMBER = 6;
    private boolean hasHost;
    private java.lang.String host_ = "";
    public boolean hasHost() { return hasHost; }
    public java.lang.String getHost() { return host_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (java.lang.String element : getRunningsList()) {
        output.writeString(1, element);
      }
      for (java.lang.String element : getDebugRunningsList()) {
        output.writeString(2, element);
      }
      for (java.lang.String element : getManualRunningsList()) {
        output.writeString(3, element);
      }
      if (hasTimestamp()) {
        output.writeInt64(4, getTimestamp());
      }
      if (hasMemRate()) {
        output.writeFloat(5, getMemRate());
      }
      if (hasHost()) {
        output.writeString(6, getHost());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (java.lang.String element : getRunningsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getRunningsList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getDebugRunningsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getDebugRunningsList().size();
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getManualRunningsList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getManualRunningsList().size();
      }
      if (hasTimestamp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, getTimestamp());
      }
      if (hasMemRate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, getMemRate());
      }
      if (hasHost()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getHost());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage result;
      
      // Construct using com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage();
        return builder;
      }
      
      protected com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage.getDescriptor();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage getDefaultInstanceForType() {
        return com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.runnings_ != java.util.Collections.EMPTY_LIST) {
          result.runnings_ =
            java.util.Collections.unmodifiableList(result.runnings_);
        }
        if (result.debugRunnings_ != java.util.Collections.EMPTY_LIST) {
          result.debugRunnings_ =
            java.util.Collections.unmodifiableList(result.debugRunnings_);
        }
        if (result.manualRunnings_ != java.util.Collections.EMPTY_LIST) {
          result.manualRunnings_ =
            java.util.Collections.unmodifiableList(result.manualRunnings_);
        }
        com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage) {
          return mergeFrom((com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage other) {
        if (other == com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage.getDefaultInstance()) return this;
        if (!other.runnings_.isEmpty()) {
          if (result.runnings_.isEmpty()) {
            result.runnings_ = new java.util.ArrayList<java.lang.String>();
          }
          result.runnings_.addAll(other.runnings_);
        }
        if (!other.debugRunnings_.isEmpty()) {
          if (result.debugRunnings_.isEmpty()) {
            result.debugRunnings_ = new java.util.ArrayList<java.lang.String>();
          }
          result.debugRunnings_.addAll(other.debugRunnings_);
        }
        if (!other.manualRunnings_.isEmpty()) {
          if (result.manualRunnings_.isEmpty()) {
            result.manualRunnings_ = new java.util.ArrayList<java.lang.String>();
          }
          result.manualRunnings_.addAll(other.manualRunnings_);
        }
        if (other.hasTimestamp()) {
          setTimestamp(other.getTimestamp());
        }
        if (other.hasMemRate()) {
          setMemRate(other.getMemRate());
        }
        if (other.hasHost()) {
          setHost(other.getHost());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              addRunnings(input.readString());
              break;
            }
            case 18: {
              addDebugRunnings(input.readString());
              break;
            }
            case 26: {
              addManualRunnings(input.readString());
              break;
            }
            case 32: {
              setTimestamp(input.readInt64());
              break;
            }
            case 45: {
              setMemRate(input.readFloat());
              break;
            }
            case 50: {
              setHost(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated string runnings = 1;
      public java.util.List<java.lang.String> getRunningsList() {
        return java.util.Collections.unmodifiableList(result.runnings_);
      }
      public int getRunningsCount() {
        return result.getRunningsCount();
      }
      public java.lang.String getRunnings(int index) {
        return result.getRunnings(index);
      }
      public Builder setRunnings(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.runnings_.set(index, value);
        return this;
      }
      public Builder addRunnings(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.runnings_.isEmpty()) {
          result.runnings_ = new java.util.ArrayList<java.lang.String>();
        }
        result.runnings_.add(value);
        return this;
      }
      public Builder addAllRunnings(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.runnings_.isEmpty()) {
          result.runnings_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.runnings_);
        return this;
      }
      public Builder clearRunnings() {
        result.runnings_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string debugRunnings = 2;
      public java.util.List<java.lang.String> getDebugRunningsList() {
        return java.util.Collections.unmodifiableList(result.debugRunnings_);
      }
      public int getDebugRunningsCount() {
        return result.getDebugRunningsCount();
      }
      public java.lang.String getDebugRunnings(int index) {
        return result.getDebugRunnings(index);
      }
      public Builder setDebugRunnings(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.debugRunnings_.set(index, value);
        return this;
      }
      public Builder addDebugRunnings(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.debugRunnings_.isEmpty()) {
          result.debugRunnings_ = new java.util.ArrayList<java.lang.String>();
        }
        result.debugRunnings_.add(value);
        return this;
      }
      public Builder addAllDebugRunnings(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.debugRunnings_.isEmpty()) {
          result.debugRunnings_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.debugRunnings_);
        return this;
      }
      public Builder clearDebugRunnings() {
        result.debugRunnings_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated string manualRunnings = 3;
      public java.util.List<java.lang.String> getManualRunningsList() {
        return java.util.Collections.unmodifiableList(result.manualRunnings_);
      }
      public int getManualRunningsCount() {
        return result.getManualRunningsCount();
      }
      public java.lang.String getManualRunnings(int index) {
        return result.getManualRunnings(index);
      }
      public Builder setManualRunnings(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.manualRunnings_.set(index, value);
        return this;
      }
      public Builder addManualRunnings(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.manualRunnings_.isEmpty()) {
          result.manualRunnings_ = new java.util.ArrayList<java.lang.String>();
        }
        result.manualRunnings_.add(value);
        return this;
      }
      public Builder addAllManualRunnings(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.manualRunnings_.isEmpty()) {
          result.manualRunnings_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.manualRunnings_);
        return this;
      }
      public Builder clearManualRunnings() {
        result.manualRunnings_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int64 timestamp = 4;
      public boolean hasTimestamp() {
        return result.hasTimestamp();
      }
      public long getTimestamp() {
        return result.getTimestamp();
      }
      public Builder setTimestamp(long value) {
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder clearTimestamp() {
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
      
      // optional float mem_rate = 5;
      public boolean hasMemRate() {
        return result.hasMemRate();
      }
      public float getMemRate() {
        return result.getMemRate();
      }
      public Builder setMemRate(float value) {
        result.hasMemRate = true;
        result.memRate_ = value;
        return this;
      }
      public Builder clearMemRate() {
        result.hasMemRate = false;
        result.memRate_ = 0F;
        return this;
      }
      
      // optional string host = 6;
      public boolean hasHost() {
        return result.hasHost();
      }
      public java.lang.String getHost() {
        return result.getHost();
      }
      public Builder setHost(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHost = true;
        result.host_ = value;
        return this;
      }
      public Builder clearHost() {
        result.hasHost = false;
        result.host_ = getDefaultInstance().getHost();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.taobao.zeus.socket.protocol.HeartBeatMessage)
    }
    
    static {
      defaultInstance = new HeartBeatMessage(true);
      com.taobao.zeus.socket.protocol.Protocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.taobao.zeus.socket.protocol.HeartBeatMessage)
  }
  
  public static final class ExecuteMessage extends
      com.google.protobuf.GeneratedMessage {
    // Use ExecuteMessage.newBuilder() to construct.
    private ExecuteMessage() {
      initFields();
    }
    private ExecuteMessage(boolean noInit) {}
    
    private static final ExecuteMessage defaultInstance;
    public static ExecuteMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public ExecuteMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_ExecuteMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_ExecuteMessage_fieldAccessorTable;
    }
    
    // required string jobId = 1;
    public static final int JOBID_FIELD_NUMBER = 1;
    private boolean hasJobId;
    private java.lang.String jobId_ = "";
    public boolean hasJobId() { return hasJobId; }
    public java.lang.String getJobId() { return jobId_; }
    
    // optional sint32 exitCode = 2;
    public static final int EXITCODE_FIELD_NUMBER = 2;
    private boolean hasExitCode;
    private int exitCode_ = 0;
    public boolean hasExitCode() { return hasExitCode; }
    public int getExitCode() { return exitCode_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasJobId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasJobId()) {
        output.writeString(1, getJobId());
      }
      if (hasExitCode()) {
        output.writeSInt32(2, getExitCode());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasJobId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getJobId());
      }
      if (hasExitCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, getExitCode());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage result;
      
      // Construct using com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage();
        return builder;
      }
      
      protected com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage.getDescriptor();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage getDefaultInstanceForType() {
        return com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage) {
          return mergeFrom((com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage other) {
        if (other == com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage.getDefaultInstance()) return this;
        if (other.hasJobId()) {
          setJobId(other.getJobId());
        }
        if (other.hasExitCode()) {
          setExitCode(other.getExitCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setJobId(input.readString());
              break;
            }
            case 16: {
              setExitCode(input.readSInt32());
              break;
            }
          }
        }
      }
      
      
      // required string jobId = 1;
      public boolean hasJobId() {
        return result.hasJobId();
      }
      public java.lang.String getJobId() {
        return result.getJobId();
      }
      public Builder setJobId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasJobId = true;
        result.jobId_ = value;
        return this;
      }
      public Builder clearJobId() {
        result.hasJobId = false;
        result.jobId_ = getDefaultInstance().getJobId();
        return this;
      }
      
      // optional sint32 exitCode = 2;
      public boolean hasExitCode() {
        return result.hasExitCode();
      }
      public int getExitCode() {
        return result.getExitCode();
      }
      public Builder setExitCode(int value) {
        result.hasExitCode = true;
        result.exitCode_ = value;
        return this;
      }
      public Builder clearExitCode() {
        result.hasExitCode = false;
        result.exitCode_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.taobao.zeus.socket.protocol.ExecuteMessage)
    }
    
    static {
      defaultInstance = new ExecuteMessage(true);
      com.taobao.zeus.socket.protocol.Protocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.taobao.zeus.socket.protocol.ExecuteMessage)
  }
  
  public static final class CancelMessage extends
      com.google.protobuf.GeneratedMessage {
    // Use CancelMessage.newBuilder() to construct.
    private CancelMessage() {
      initFields();
    }
    private CancelMessage(boolean noInit) {}
    
    private static final CancelMessage defaultInstance;
    public static CancelMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public CancelMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_CancelMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_CancelMessage_fieldAccessorTable;
    }
    
    // required .com.taobao.zeus.socket.protocol.ExecuteKind ek = 1;
    public static final int EK_FIELD_NUMBER = 1;
    private boolean hasEk;
    private com.taobao.zeus.socket.protocol.Protocol.ExecuteKind ek_;
    public boolean hasEk() { return hasEk; }
    public com.taobao.zeus.socket.protocol.Protocol.ExecuteKind getEk() { return ek_; }
    
    // required string id = 2;
    public static final int ID_FIELD_NUMBER = 2;
    private boolean hasId;
    private java.lang.String id_ = "";
    public boolean hasId() { return hasId; }
    public java.lang.String getId() { return id_; }
    
    private void initFields() {
      ek_ = com.taobao.zeus.socket.protocol.Protocol.ExecuteKind.ScheduleKind;
    }
    public final boolean isInitialized() {
      if (!hasEk) return false;
      if (!hasId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasEk()) {
        output.writeEnum(1, getEk().getNumber());
      }
      if (hasId()) {
        output.writeString(2, getId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasEk()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getEk().getNumber());
      }
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.taobao.zeus.socket.protocol.Protocol.CancelMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.CancelMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.CancelMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.CancelMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.CancelMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.CancelMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.CancelMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.CancelMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.CancelMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.CancelMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.taobao.zeus.socket.protocol.Protocol.CancelMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.taobao.zeus.socket.protocol.Protocol.CancelMessage result;
      
      // Construct using com.taobao.zeus.socket.protocol.Protocol.CancelMessage.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.taobao.zeus.socket.protocol.Protocol.CancelMessage();
        return builder;
      }
      
      protected com.taobao.zeus.socket.protocol.Protocol.CancelMessage internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.taobao.zeus.socket.protocol.Protocol.CancelMessage();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.taobao.zeus.socket.protocol.Protocol.CancelMessage.getDescriptor();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.CancelMessage getDefaultInstanceForType() {
        return com.taobao.zeus.socket.protocol.Protocol.CancelMessage.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.taobao.zeus.socket.protocol.Protocol.CancelMessage build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.taobao.zeus.socket.protocol.Protocol.CancelMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.CancelMessage buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.taobao.zeus.socket.protocol.Protocol.CancelMessage returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.taobao.zeus.socket.protocol.Protocol.CancelMessage) {
          return mergeFrom((com.taobao.zeus.socket.protocol.Protocol.CancelMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.taobao.zeus.socket.protocol.Protocol.CancelMessage other) {
        if (other == com.taobao.zeus.socket.protocol.Protocol.CancelMessage.getDefaultInstance()) return this;
        if (other.hasEk()) {
          setEk(other.getEk());
        }
        if (other.hasId()) {
          setId(other.getId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.taobao.zeus.socket.protocol.Protocol.ExecuteKind value = com.taobao.zeus.socket.protocol.Protocol.ExecuteKind.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setEk(value);
              }
              break;
            }
            case 18: {
              setId(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required .com.taobao.zeus.socket.protocol.ExecuteKind ek = 1;
      public boolean hasEk() {
        return result.hasEk();
      }
      public com.taobao.zeus.socket.protocol.Protocol.ExecuteKind getEk() {
        return result.getEk();
      }
      public Builder setEk(com.taobao.zeus.socket.protocol.Protocol.ExecuteKind value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasEk = true;
        result.ek_ = value;
        return this;
      }
      public Builder clearEk() {
        result.hasEk = false;
        result.ek_ = com.taobao.zeus.socket.protocol.Protocol.ExecuteKind.ScheduleKind;
        return this;
      }
      
      // required string id = 2;
      public boolean hasId() {
        return result.hasId();
      }
      public java.lang.String getId() {
        return result.getId();
      }
      public Builder setId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = getDefaultInstance().getId();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.taobao.zeus.socket.protocol.CancelMessage)
    }
    
    static {
      defaultInstance = new CancelMessage(true);
      com.taobao.zeus.socket.protocol.Protocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.taobao.zeus.socket.protocol.CancelMessage)
  }
  
  public static final class DebugMessage extends
      com.google.protobuf.GeneratedMessage {
    // Use DebugMessage.newBuilder() to construct.
    private DebugMessage() {
      initFields();
    }
    private DebugMessage(boolean noInit) {}
    
    private static final DebugMessage defaultInstance;
    public static DebugMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public DebugMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_DebugMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_DebugMessage_fieldAccessorTable;
    }
    
    // required string debugId = 1;
    public static final int DEBUGID_FIELD_NUMBER = 1;
    private boolean hasDebugId;
    private java.lang.String debugId_ = "";
    public boolean hasDebugId() { return hasDebugId; }
    public java.lang.String getDebugId() { return debugId_; }
    
    // optional sint32 exitCode = 2;
    public static final int EXITCODE_FIELD_NUMBER = 2;
    private boolean hasExitCode;
    private int exitCode_ = 0;
    public boolean hasExitCode() { return hasExitCode; }
    public int getExitCode() { return exitCode_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasDebugId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasDebugId()) {
        output.writeString(1, getDebugId());
      }
      if (hasExitCode()) {
        output.writeSInt32(2, getExitCode());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasDebugId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getDebugId());
      }
      if (hasExitCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, getExitCode());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.taobao.zeus.socket.protocol.Protocol.DebugMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.DebugMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.DebugMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.DebugMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.DebugMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.DebugMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.DebugMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.DebugMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.DebugMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.DebugMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.taobao.zeus.socket.protocol.Protocol.DebugMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.taobao.zeus.socket.protocol.Protocol.DebugMessage result;
      
      // Construct using com.taobao.zeus.socket.protocol.Protocol.DebugMessage.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.taobao.zeus.socket.protocol.Protocol.DebugMessage();
        return builder;
      }
      
      protected com.taobao.zeus.socket.protocol.Protocol.DebugMessage internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.taobao.zeus.socket.protocol.Protocol.DebugMessage();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.taobao.zeus.socket.protocol.Protocol.DebugMessage.getDescriptor();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.DebugMessage getDefaultInstanceForType() {
        return com.taobao.zeus.socket.protocol.Protocol.DebugMessage.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.taobao.zeus.socket.protocol.Protocol.DebugMessage build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.taobao.zeus.socket.protocol.Protocol.DebugMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.DebugMessage buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.taobao.zeus.socket.protocol.Protocol.DebugMessage returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.taobao.zeus.socket.protocol.Protocol.DebugMessage) {
          return mergeFrom((com.taobao.zeus.socket.protocol.Protocol.DebugMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.taobao.zeus.socket.protocol.Protocol.DebugMessage other) {
        if (other == com.taobao.zeus.socket.protocol.Protocol.DebugMessage.getDefaultInstance()) return this;
        if (other.hasDebugId()) {
          setDebugId(other.getDebugId());
        }
        if (other.hasExitCode()) {
          setExitCode(other.getExitCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setDebugId(input.readString());
              break;
            }
            case 16: {
              setExitCode(input.readSInt32());
              break;
            }
          }
        }
      }
      
      
      // required string debugId = 1;
      public boolean hasDebugId() {
        return result.hasDebugId();
      }
      public java.lang.String getDebugId() {
        return result.getDebugId();
      }
      public Builder setDebugId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDebugId = true;
        result.debugId_ = value;
        return this;
      }
      public Builder clearDebugId() {
        result.hasDebugId = false;
        result.debugId_ = getDefaultInstance().getDebugId();
        return this;
      }
      
      // optional sint32 exitCode = 2;
      public boolean hasExitCode() {
        return result.hasExitCode();
      }
      public int getExitCode() {
        return result.getExitCode();
      }
      public Builder setExitCode(int value) {
        result.hasExitCode = true;
        result.exitCode_ = value;
        return this;
      }
      public Builder clearExitCode() {
        result.hasExitCode = false;
        result.exitCode_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.taobao.zeus.socket.protocol.DebugMessage)
    }
    
    static {
      defaultInstance = new DebugMessage(true);
      com.taobao.zeus.socket.protocol.Protocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.taobao.zeus.socket.protocol.DebugMessage)
  }
  
  public static final class ManualMessage extends
      com.google.protobuf.GeneratedMessage {
    // Use ManualMessage.newBuilder() to construct.
    private ManualMessage() {
      initFields();
    }
    private ManualMessage(boolean noInit) {}
    
    private static final ManualMessage defaultInstance;
    public static ManualMessage getDefaultInstance() {
      return defaultInstance;
    }
    
    public ManualMessage getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_ManualMessage_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.taobao.zeus.socket.protocol.Protocol.internal_static_com_taobao_zeus_socket_protocol_ManualMessage_fieldAccessorTable;
    }
    
    // required string historyId = 1;
    public static final int HISTORYID_FIELD_NUMBER = 1;
    private boolean hasHistoryId;
    private java.lang.String historyId_ = "";
    public boolean hasHistoryId() { return hasHistoryId; }
    public java.lang.String getHistoryId() { return historyId_; }
    
    // optional sint32 exitCode = 2;
    public static final int EXITCODE_FIELD_NUMBER = 2;
    private boolean hasExitCode;
    private int exitCode_ = 0;
    public boolean hasExitCode() { return hasExitCode; }
    public int getExitCode() { return exitCode_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasHistoryId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasHistoryId()) {
        output.writeString(1, getHistoryId());
      }
      if (hasExitCode()) {
        output.writeSInt32(2, getExitCode());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasHistoryId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getHistoryId());
      }
      if (hasExitCode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeSInt32Size(2, getExitCode());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.taobao.zeus.socket.protocol.Protocol.ManualMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ManualMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ManualMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ManualMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ManualMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ManualMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ManualMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ManualMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ManualMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.taobao.zeus.socket.protocol.Protocol.ManualMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.taobao.zeus.socket.protocol.Protocol.ManualMessage prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.taobao.zeus.socket.protocol.Protocol.ManualMessage result;
      
      // Construct using com.taobao.zeus.socket.protocol.Protocol.ManualMessage.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.taobao.zeus.socket.protocol.Protocol.ManualMessage();
        return builder;
      }
      
      protected com.taobao.zeus.socket.protocol.Protocol.ManualMessage internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.taobao.zeus.socket.protocol.Protocol.ManualMessage();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.taobao.zeus.socket.protocol.Protocol.ManualMessage.getDescriptor();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.ManualMessage getDefaultInstanceForType() {
        return com.taobao.zeus.socket.protocol.Protocol.ManualMessage.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.taobao.zeus.socket.protocol.Protocol.ManualMessage build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.taobao.zeus.socket.protocol.Protocol.ManualMessage buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.taobao.zeus.socket.protocol.Protocol.ManualMessage buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.taobao.zeus.socket.protocol.Protocol.ManualMessage returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.taobao.zeus.socket.protocol.Protocol.ManualMessage) {
          return mergeFrom((com.taobao.zeus.socket.protocol.Protocol.ManualMessage)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.taobao.zeus.socket.protocol.Protocol.ManualMessage other) {
        if (other == com.taobao.zeus.socket.protocol.Protocol.ManualMessage.getDefaultInstance()) return this;
        if (other.hasHistoryId()) {
          setHistoryId(other.getHistoryId());
        }
        if (other.hasExitCode()) {
          setExitCode(other.getExitCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setHistoryId(input.readString());
              break;
            }
            case 16: {
              setExitCode(input.readSInt32());
              break;
            }
          }
        }
      }
      
      
      // required string historyId = 1;
      public boolean hasHistoryId() {
        return result.hasHistoryId();
      }
      public java.lang.String getHistoryId() {
        return result.getHistoryId();
      }
      public Builder setHistoryId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasHistoryId = true;
        result.historyId_ = value;
        return this;
      }
      public Builder clearHistoryId() {
        result.hasHistoryId = false;
        result.historyId_ = getDefaultInstance().getHistoryId();
        return this;
      }
      
      // optional sint32 exitCode = 2;
      public boolean hasExitCode() {
        return result.hasExitCode();
      }
      public int getExitCode() {
        return result.getExitCode();
      }
      public Builder setExitCode(int value) {
        result.hasExitCode = true;
        result.exitCode_ = value;
        return this;
      }
      public Builder clearExitCode() {
        result.hasExitCode = false;
        result.exitCode_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.taobao.zeus.socket.protocol.ManualMessage)
    }
    
    static {
      defaultInstance = new ManualMessage(true);
      com.taobao.zeus.socket.protocol.Protocol.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.taobao.zeus.socket.protocol.ManualMessage)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_taobao_zeus_socket_protocol_SocketMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_taobao_zeus_socket_protocol_SocketMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_taobao_zeus_socket_protocol_WebRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_taobao_zeus_socket_protocol_WebRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_taobao_zeus_socket_protocol_WebResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_taobao_zeus_socket_protocol_WebResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_taobao_zeus_socket_protocol_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_taobao_zeus_socket_protocol_Request_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_taobao_zeus_socket_protocol_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_taobao_zeus_socket_protocol_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_taobao_zeus_socket_protocol_HeartBeatMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_taobao_zeus_socket_protocol_HeartBeatMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_taobao_zeus_socket_protocol_ExecuteMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_taobao_zeus_socket_protocol_ExecuteMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_taobao_zeus_socket_protocol_CancelMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_taobao_zeus_socket_protocol_CancelMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_taobao_zeus_socket_protocol_DebugMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_taobao_zeus_socket_protocol_DebugMessage_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_taobao_zeus_socket_protocol_ManualMessage_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_taobao_zeus_socket_protocol_ManualMessage_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024SocketProtocol.proto\022\037com.taobao.zeus." +
      "socket.protocol\"\246\001\n\rSocketMessage\022A\n\004kin" +
      "d\030\001 \002(\01623.com.taobao.zeus.socket.protoco" +
      "l.SocketMessage.Kind\022\014\n\004body\030\002 \001(\014\"D\n\004Ki" +
      "nd\022\013\n\007REQUEST\020\000\022\014\n\010RESPONSE\020\001\022\017\n\013WEB_REU" +
      "QEST\020\002\022\020\n\014WEB_RESPONSE\020\003\"\350\001\n\nWebRequest\022" +
      "\013\n\003rid\030\001 \002(\021\022<\n\007operate\030\002 \002(\0162+.com.taob" +
      "ao.zeus.socket.protocol.WebOperate\0228\n\002ek" +
      "\030\003 \002(\0162,.com.taobao.zeus.socket.protocol" +
      ".ExecuteKind\022\n\n\002id\030\004 \002(\t\022\020\n\010executor\030\005 \001",
      "(\t\022\014\n\004body\030\006 \001(\014\")\n\007Trigger\022\n\n\006MANUAL\020\000\022" +
      "\022\n\016MANUAL_RECOVER\020\001\"\262\001\n\013WebResponse\0227\n\006s" +
      "tatus\030\001 \002(\0162\'.com.taobao.zeus.socket.pro" +
      "tocol.Status\022\013\n\003rid\030\002 \002(\021\022<\n\007operate\030\003 \002" +
      "(\0162+.com.taobao.zeus.socket.protocol.Web" +
      "Operate\022\021\n\terrorText\030\004 \001(\t\022\014\n\004body\030\005 \001(\014" +
      "\"_\n\007Request\022\013\n\003rid\030\001 \002(\021\0229\n\007operate\030\002 \002(" +
      "\0162(.com.taobao.zeus.socket.protocol.Oper" +
      "ate\022\014\n\004body\030\003 \001(\014\"\254\001\n\010Response\0227\n\006status" +
      "\030\001 \002(\0162\'.com.taobao.zeus.socket.protocol",
      ".Status\022\013\n\003rid\030\002 \002(\021\0229\n\007operate\030\003 \002(\0162(." +
      "com.taobao.zeus.socket.protocol.Operate\022" +
      "\021\n\terrorText\030\004 \001(\t\022\014\n\004body\030\005 \001(\014\"\206\001\n\020Hea" +
      "rtBeatMessage\022\020\n\010runnings\030\001 \003(\t\022\025\n\rdebug" +
      "Runnings\030\002 \003(\t\022\026\n\016manualRunnings\030\003 \003(\t\022\021" +
      "\n\ttimestamp\030\004 \001(\003\022\020\n\010mem_rate\030\005 \001(\002\022\014\n\004h" +
      "ost\030\006 \001(\t\"1\n\016ExecuteMessage\022\r\n\005jobId\030\001 \002" +
      "(\t\022\020\n\010exitCode\030\002 \001(\021\"U\n\rCancelMessage\0228\n" +
      "\002ek\030\001 \002(\0162,.com.taobao.zeus.socket.proto" +
      "col.ExecuteKind\022\n\n\002id\030\002 \002(\t\"1\n\014DebugMess",
      "age\022\017\n\007debugId\030\001 \002(\t\022\020\n\010exitCode\030\002 \001(\021\"4" +
      "\n\rManualMessage\022\021\n\thistoryId\030\001 \002(\t\022\020\n\010ex" +
      "itCode\030\002 \001(\021*\033\n\006Status\022\006\n\002OK\020\000\022\t\n\005ERROR\020" +
      "\001*>\n\013ExecuteKind\022\020\n\014ScheduleKind\020\000\022\016\n\nMa" +
      "nualKind\020\001\022\r\n\tDebugKind\020\002*L\n\nWebOperate\022" +
      "\r\n\tUpdateJob\020\001\022\016\n\nExecuteJob\020\002\022\r\n\tCancel" +
      "Job\020\003\022\020\n\014ExecuteDebug\020\004*I\n\007Operate\022\r\n\tHe" +
      "artBeat\020\000\022\014\n\010Schedule\020\001\022\n\n\006Cancel\020\002\022\t\n\005D" +
      "ebug\020\003\022\n\n\006Manual\020\004B-\n\037com.taobao.zeus.so" +
      "cket.protocolB\010ProtocolH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_taobao_zeus_socket_protocol_SocketMessage_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_taobao_zeus_socket_protocol_SocketMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_taobao_zeus_socket_protocol_SocketMessage_descriptor,
              new java.lang.String[] { "Kind", "Body", },
              com.taobao.zeus.socket.protocol.Protocol.SocketMessage.class,
              com.taobao.zeus.socket.protocol.Protocol.SocketMessage.Builder.class);
          internal_static_com_taobao_zeus_socket_protocol_WebRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_taobao_zeus_socket_protocol_WebRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_taobao_zeus_socket_protocol_WebRequest_descriptor,
              new java.lang.String[] { "Rid", "Operate", "Ek", "Id", "Executor", "Body", },
              com.taobao.zeus.socket.protocol.Protocol.WebRequest.class,
              com.taobao.zeus.socket.protocol.Protocol.WebRequest.Builder.class);
          internal_static_com_taobao_zeus_socket_protocol_WebResponse_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_taobao_zeus_socket_protocol_WebResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_taobao_zeus_socket_protocol_WebResponse_descriptor,
              new java.lang.String[] { "Status", "Rid", "Operate", "ErrorText", "Body", },
              com.taobao.zeus.socket.protocol.Protocol.WebResponse.class,
              com.taobao.zeus.socket.protocol.Protocol.WebResponse.Builder.class);
          internal_static_com_taobao_zeus_socket_protocol_Request_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_taobao_zeus_socket_protocol_Request_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_taobao_zeus_socket_protocol_Request_descriptor,
              new java.lang.String[] { "Rid", "Operate", "Body", },
              com.taobao.zeus.socket.protocol.Protocol.Request.class,
              com.taobao.zeus.socket.protocol.Protocol.Request.Builder.class);
          internal_static_com_taobao_zeus_socket_protocol_Response_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_taobao_zeus_socket_protocol_Response_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_taobao_zeus_socket_protocol_Response_descriptor,
              new java.lang.String[] { "Status", "Rid", "Operate", "ErrorText", "Body", },
              com.taobao.zeus.socket.protocol.Protocol.Response.class,
              com.taobao.zeus.socket.protocol.Protocol.Response.Builder.class);
          internal_static_com_taobao_zeus_socket_protocol_HeartBeatMessage_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_taobao_zeus_socket_protocol_HeartBeatMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_taobao_zeus_socket_protocol_HeartBeatMessage_descriptor,
              new java.lang.String[] { "Runnings", "DebugRunnings", "ManualRunnings", "Timestamp", "MemRate", "Host", },
              com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage.class,
              com.taobao.zeus.socket.protocol.Protocol.HeartBeatMessage.Builder.class);
          internal_static_com_taobao_zeus_socket_protocol_ExecuteMessage_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_taobao_zeus_socket_protocol_ExecuteMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_taobao_zeus_socket_protocol_ExecuteMessage_descriptor,
              new java.lang.String[] { "JobId", "ExitCode", },
              com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage.class,
              com.taobao.zeus.socket.protocol.Protocol.ExecuteMessage.Builder.class);
          internal_static_com_taobao_zeus_socket_protocol_CancelMessage_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_taobao_zeus_socket_protocol_CancelMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_taobao_zeus_socket_protocol_CancelMessage_descriptor,
              new java.lang.String[] { "Ek", "Id", },
              com.taobao.zeus.socket.protocol.Protocol.CancelMessage.class,
              com.taobao.zeus.socket.protocol.Protocol.CancelMessage.Builder.class);
          internal_static_com_taobao_zeus_socket_protocol_DebugMessage_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_taobao_zeus_socket_protocol_DebugMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_taobao_zeus_socket_protocol_DebugMessage_descriptor,
              new java.lang.String[] { "DebugId", "ExitCode", },
              com.taobao.zeus.socket.protocol.Protocol.DebugMessage.class,
              com.taobao.zeus.socket.protocol.Protocol.DebugMessage.Builder.class);
          internal_static_com_taobao_zeus_socket_protocol_ManualMessage_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_taobao_zeus_socket_protocol_ManualMessage_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_taobao_zeus_socket_protocol_ManualMessage_descriptor,
              new java.lang.String[] { "HistoryId", "ExitCode", },
              com.taobao.zeus.socket.protocol.Protocol.ManualMessage.class,
              com.taobao.zeus.socket.protocol.Protocol.ManualMessage.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
